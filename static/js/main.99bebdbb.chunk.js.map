{"version":3,"sources":["hex/Hex.js","hexmap/Hexmap.js","hexeditmenu/HexEditMenu.js","App.js","reducers.js","serviceWorker.js","index.js","hex/plains.svg","hex/forest.svg","hex/hills.svg","hex/mountain.svg","hex/swamp.svg"],"names":["Polygon","styled","polygon","_templateObject","G","g","_templateObject2","Hex","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hexWidth","hexMargin","hexHeight","Math","sqrt","hexSideLength","sin","PI","hexVerticalOffset","xPos","yPos","terrains","plains","forest","hills","mountain","swamp","x","y","abs","_this2","positionHex","react_default","a","createElement","className","terrain","transform","onClick","event","hexkey","points","href","width","height","alt","dy","fill","textAnchor","Component","Hexmap","state","svgWidth","svgHeight","updateDimensions","bind","assertThisInitialized","clickHex","console","log","setState","window","innerWidth","innerHeight","mapholder","document","getElementById","d3","svg","mapXresetPos","getBBox","mapYresetPos","mapXpos","attr","mapYpos","firstXForm","baseVal","getItem","type","SVGTransform","SVG_TRANSFORM_TRANSLATE","firstX","matrix","e","firstY","f","xmove","dx","ymove","setAttribute","addEventListener","positionMap","drag","on","dragmove","removeEventListener","key","action","JSON","stringify","dispatch","hexes","map","renderedHexes","hex","hex_Hex","id","connect","HexEditMenu","renderField","_ref","input","placeholder","label","_ref$meta","meta","touched","error","assign","_this$props","handleSubmit","Field","name","component","value","values","onSubmit","objectSpread","reduxForm","form","initialHex","find","ui","selectedHexKey","initialValues","toString","enableReinitialize","App","parseInt","SubmissionError","validateX","validateY","dispatchAction","src_hexmap_Hexmap","src_hexeditmenu_HexEditMenu","hexesInitialState","uiInitialState","rootReducer","combineReducers","arguments","length","undefined","alert","concat","toConsumableArray","delete_key","filter","localStorage","parse","removeItem","formReducer","store","createStore","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.99bebdbb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n//import './Hex.css';\r\nimport plains from './plains.svg';\r\nimport forest from './forest.svg';\r\nimport hills from './hills.svg';\r\nimport mountain from './mountain.svg';\r\nimport swamp from './swamp.svg';\r\n\r\nconst Polygon = styled.polygon`\r\n  stroke:black;\r\n  stroke-width:2;\r\n  fill:white;\r\n  .plains & {\r\n    fill:#e7f79c;\r\n  }\r\n  .forest & {\r\n    fill:#7aad43;\r\n  }\r\n  .hills & {\r\n    fill:#c3d263;\r\n  }\r\n  .mountain & {\r\n    fill:#b28000;\r\n  }\r\n  .swamp & {\r\n    fill:#addea5;\r\n  }\r\n`\r\n\r\nconst G = styled.g`\r\n  :hover {\r\n    > ${Polygon} {\r\n      stroke:#0c0;\r\n    }\r\n  }\r\n  \r\n  text {\r\n    paint-order: stroke;\r\n    stroke: #fff;\r\n    stroke-width: 2px;\r\n  }\r\n`\r\n\r\n\r\nclass Hex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.hexWidth = 150;\r\n    this.hexMargin = 4;\r\n    \r\n    this.hexHeight = 2*this.hexWidth/Math.sqrt(3);\r\n    this.hexSideLength = this.hexHeight*Math.sin(Math.PI/6);\r\n    this.hexVerticalOffset = (this.hexHeight-this.hexSideLength)/2;\r\n    \r\n    this.xPos = 0;\r\n    this.yPos = 0;\r\n    \r\n    this.terrains = {\r\n      \"plains\": plains,\r\n      \"forest\": forest,\r\n      \"hills\": hills,\r\n      \"mountain\": mountain,\r\n      \"swamp\": swamp\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  positionHex(x, y, hexWidth, hexHeight, hexVerticalOffset, hexMargin) {\r\n    let xPos = x*hexWidth-hexWidth/2+hexMargin*x;\r\n    if(y%2!==0){xPos+=hexWidth/2;xPos+=hexMargin/2};\r\n    this.xPos = xPos;\r\n    \r\n    let yPos = y*hexHeight+hexMargin*y;\r\n    if(y>0){yPos-=hexVerticalOffset*y};\r\n    if(y<0){yPos+=hexVerticalOffset*Math.abs(y)};\r\n    this.yPos = yPos;\r\n  }\r\n  \r\n  render() {    \r\n    this.positionHex(this.props.x, this.props.y, this.hexWidth, this.hexHeight, this.hexVerticalOffset, this.hexMargin);\r\n    \r\n    return (\r\n      <G\r\n        className={\"hex \" + this.props.terrain}\r\n        transform={\"translate(\" + this.xPos + \",\" + this.yPos + \")\"}\r\n        onClick={(event) => this.props.onClick(event, this.props.hexkey)}\r\n      >\r\n        <Polygon className=\"hexagon\"\r\n          points = {\r\n            this.hexWidth/2 + \",\" + 0 + \" \" +\r\n            this.hexWidth + \",\" + (this.hexHeight-this.hexSideLength)/2 + \" \" +\r\n            this.hexWidth + \",\" + (this.hexHeight/2+(this.hexHeight-this.hexSideLength)/2) + \" \" +\r\n            this.hexWidth/2 + \",\" + this.hexHeight + \" \" +\r\n            0 + \",\" + (this.hexHeight/2+(this.hexHeight-this.hexSideLength)/2) + \" \" +\r\n            0 + \",\" + (this.hexHeight-this.hexSideLength)/2\r\n          }\r\n        >\r\n        </Polygon>\r\n        <image href={this.terrains[this.props.terrain]} width={this.hexWidth} height={this.hexHeight} alt=\"\"></image>\r\n        <text x=\"75\" y=\"20\" dy=\".35em\" fill=\"#000\" textAnchor=\"middle\">{this.props.x} {this.props.y}</text>\r\n        <text x=\"75\" y=\"40\" dy=\".35em\" fill=\"#000\" textAnchor=\"middle\">{this.props.terrain}</text>\r\n      </G>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hex;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './Hexmap.css';\r\nimport Hex from '../hex/Hex.js';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Hexmap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      svgWidth: 0,\r\n      svgHeight: 0\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.clickHex = this.clickHex.bind(this);\r\n  }\r\n   \r\n  updateDimensions() {\r\n    console.log(\"the window had been resized\");\r\n    this.setState({ svgWidth: window.innerWidth });\r\n    this.setState({ svgHeight: window.innerHeight });\r\n  }\r\n  \r\n  positionMap() {\r\n    console.log('positioning the map...');\r\n    let mapholder = document.getElementById(\"map-holder-g\");\r\n    let g = d3.select(\"#map-holder-g\");\r\n    let svg = d3.select(\"#map-holder-svg\");\r\n    //position top left corner of the map to top left corner of svg\r\n    let mapXresetPos = mapholder.getBBox().x; mapXresetPos*=-1;\r\n    let mapYresetPos = mapholder.getBBox().y; mapYresetPos*=-1;\r\n    //mapholder.attr(\"transform\", \"translate(\"+mapXresetPos+\",\"+mapYresetPos+\")\");\r\n\r\n    //center the map\r\n    let mapXpos = (svg.attr('width') - mapholder.getBBox().width)/2;\r\n    mapXpos = mapXpos + mapXresetPos;\r\n    let mapYpos = (svg.attr('height') - mapholder.getBBox().height)/2;\r\n    mapYpos = mapYpos + mapYresetPos;\r\n    \r\n    g.attr(\"transform\", \"translate(\"+mapXpos+\",\"+mapYpos+\")\");\r\n  }\r\n  \r\n  dragmove() {\r\n    let mapholder = document.getElementById(\"map-holder-g\");\r\n    //get transform\r\n    let xforms = mapholder.transform.baseVal; // An SVGTransformList\r\n    let firstXForm = xforms.getItem(0);       // An SVGTransform\r\n    if (firstXForm.type === SVGTransform.SVG_TRANSFORM_TRANSLATE){\r\n      var firstX = firstXForm.matrix.e,\r\n          firstY = firstXForm.matrix.f;\r\n    }\r\n    let xmove = firstX + d3.event.dx;\r\n    let ymove = firstY + d3.event.dy;\r\n    mapholder.setAttribute('transform', 'translate('+xmove+','+ymove+')');\r\n  }\r\n  \r\n  \r\n  \r\n  componentWillMount() {\r\n    this.updateDimensions();\r\n  }\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.positionMap();\r\n    \r\n    let drag = d3.drag()\r\n      .on(\"drag\", this.dragmove);\r\n    d3.select(\"#map-holder-g\")\r\n      .call(drag);\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.positionMap();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  \r\n  clickHex(event, key) {\r\n    //event.stopPropagation();\r\n    console.log(\"key is \" + key);\r\n    let action = {\r\n      type: \"HEX_CLICKED\",\r\n      \"key\": key\r\n    };\r\n    console.log(\"dispatching action: \" + JSON.stringify(action));\r\n    this.props.dispatch(action);\r\n  }\r\n  \r\n  render() {\r\n    if(this.props.hexes && this.props.hexes.map){\r\n      var renderedHexes = this.props.hexes.map((hex) =>\r\n        <Hex\r\n          x={hex.x}\r\n          y={hex.y}\r\n          terrain={hex.terrain}\r\n          key={hex.key}\r\n          hexkey={hex.key}\r\n          onClick={this.clickHex}\r\n        />);\r\n    } else {\r\n      console.log(\"no state found by hexmap\");\r\n    }\r\n    return (\r\n      <div className=\"hexmap\">\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight} id=\"map-holder-svg\">\r\n          <g id=\"map-holder-g\" transform=\"translate(0,0)\">\r\n            {renderedHexes}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(\"mapping state to props\");\r\n  //console.log(\"state is \" + JSON.stringify(state));\r\n  return {\r\n    hexes: state.hexes.hexes\r\n  };\r\n}\r\n\r\n//export default Hexmap;\r\nexport default connect(mapStateToProps)(Hexmap);","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport './HexEditMenu.css';\r\n\r\nclass HexEditMenu extends Component {\r\n  componentWillMount () {\r\n    \r\n  }\r\n  \r\n  renderField = ({ input, placeholder, label, type, meta: { touched, error } }) => (\r\n      <div>\r\n        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n        {touched && error && <span className=\"error\">{error}</span>}\r\n      </div>\r\n  )\r\n\r\n  render() {\r\n    const { handleSubmit, error } = this.props;\r\n    return (\r\n      <div className=\"HexEditMenu\">\r\n        <div className=\"form-horizontal\" id=\"hex-edit-form\">\r\n          <Field\r\n            name=\"x\"\r\n            type=\"number\"\r\n            component={this.renderField}\r\n            placeholder=\"x\"\r\n          />\r\n          \r\n          <Field\r\n            name=\"y\"\r\n            type=\"number\"\r\n            component={this.renderField}\r\n            placeholder=\"y\"\r\n          />\r\n          \r\n          <Field className=\"form-control\" name=\"terrain\" component=\"select\">\r\n            <option value=\"plains\">Plains</option>\r\n            <option value=\"hills\">Hills</option>\r\n            <option value=\"forest\">Forest</option>\r\n            <option value=\"swamp\">Swamp</option>\r\n            <option value=\"mountain\">Mountain</option>\r\n          </Field>\r\n          \r\n          {error && <div><span className=\"error\"><strong>{error}</strong></span></div>}\r\n          \r\n          <button type=\"submit\" id=\"add-hex-btn\" className=\"btn btn-primary\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'ADD_HEX'\r\n              }))}\r\n          >Add Hex</button>\r\n          \r\n          <button type=\"submit\" id=\"delete-hexes-btn\" className=\"btn btn-danger\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'DELETE_HEX'\r\n              }))}\r\n          >Delete Hex</button>\r\n\r\n          <button type=\"submit\" id=\"save-map-btn\" className=\"btn btn-success\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'SAVE_MAP'\r\n              }))}\r\n          >Save Map</button>\r\n          \r\n          <button type=\"submit\" id=\"load-map-btn\" className=\"btn btn-warning\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'LOAD_MAP'\r\n              }))}\r\n          >Load Map</button>\r\n\r\n          <button type=\"submit\" id=\"clear-map-btn\" className=\"btn btn-danger\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'CLEAR_MAP'\r\n              }))}\r\n          >Clear Map</button>\r\n          \r\n          <button type=\"submit\" id=\"clear-save-btn\" className=\"btn btn-danger\"\r\n            onClick={handleSubmit(values => \r\n              this.props.onSubmit({ \r\n                ...values,\r\n                action: 'CLEAR_SAVE'\r\n              }))}\r\n          >Clear Save</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Decorate the form component\r\nHexEditMenu = reduxForm({\r\n  form: 'hexeditform'\r\n})(HexEditMenu);\r\n\r\n\r\nexport default connect(function(state){\r\n  let initialHex = state.hexes.hexes.find(hex => hex.key === state.ui.selectedHexKey);\r\n  let initialValues;\r\n  if (initialHex) {\r\n    initialValues = {\r\n      x: initialHex.x.toString(),\r\n      y: initialHex.y.toString(),\r\n      terrain: initialHex.terrain,\r\n    }\r\n  } else {\r\n    initialValues = {\r\n      x: \"0\",\r\n      y: \"0\",\r\n      terrain: \"plains\",\r\n    }\r\n  }\r\n  return {\r\n    initialValues: initialValues,\r\n    enableReinitialize: true,\r\n  }\r\n})(HexEditMenu);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Hexmap from './hexmap/Hexmap.js';\r\nimport HexEditMenu from './hexeditmenu/HexEditMenu.js';\r\nimport { connect } from 'react-redux';\r\nimport { SubmissionError } from 'redux-form'\r\n\r\nclass App extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.dispatchAction = this.dispatchAction.bind(this);\r\n  }\r\n  \r\n  dispatchAction(values) {\r\n      let action = {\r\n          type: values.action,\r\n          \"x\": values.x,\r\n          \"y\": values.y,\r\n          \"terrain\": values.terrain\r\n        };\r\n      console.log(\"dispatching action: \" + JSON.stringify(action));\r\n      this.props.dispatch(action);\r\n    }\r\n    \r\n  handleSubmit = (values) => {\r\n    //console.log(\"values: \" + JSON.stringify(values));\r\n\r\n    function validateX(values) {\r\n      console.log(\"values: \" + JSON.stringify(values));\r\n      console.log(\"x: \" + values.x);\r\n      console.log(\"parsed x: \" + parseInt(values.x));\r\n      if (!values.x || (!parseInt(values.x) && parseInt(values.x) !== 0)) {\r\n        console.log(\"something's wrong with X\");\r\n        throw new SubmissionError({\r\n          x: 'must be a number'\r\n        })\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    function validateY(values) {\r\n      if (!values.y || (!parseInt(values.y) && parseInt(values.y) !== 0)) {\r\n        console.log(\"something's wrong with y\");\r\n        throw new SubmissionError({\r\n          y: 'must be a number'\r\n        })\r\n      }else {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    if (values.action===\"ADD_HEX\" || values.action===\"DELETE_HEX\") {\r\n      if (validateX(values) && validateY(values)) {\r\n        this.dispatchAction(values);\r\n      }\r\n    } else {\r\n      this.dispatchAction(values);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        <div id=\"container\">\r\n          <Hexmap />\r\n          <HexEditMenu onSubmit={this.handleSubmit} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default App;\r\nexport default connect()(App);","import {createStore, combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nconst hexesInitialState = {\r\n  hexes: [\r\n    {\"key\": \"0 0\", \"x\": 0, \"y\": 0, \"terrain\": \"plains\"},\r\n    {\"key\": \"-1 0\", \"x\": -1, \"y\": 0, \"terrain\": \"plains\"},\r\n    {\"key\": \"1 0\", \"x\": 1, \"y\": 0, \"terrain\": \"plains\"},\r\n    {\"key\": \"0 -1\", \"x\": 0, \"y\": -1, \"terrain\": \"forest\"},\r\n    {\"key\": \"-1 -1\", \"x\": -1, \"y\": -1, \"terrain\": \"swamp\"},\r\n    {\"key\": \"0 1\", \"x\": 0, \"y\": 1, \"terrain\": \"hills\"},\r\n    {\"key\": \"-1 1\", \"x\": -1, \"y\": 1, \"terrain\": \"mountain\"},\r\n  ]\r\n};\r\n\r\nconst uiInitialState = {\r\n  selectedHexKey: \"0 0\"\r\n}\r\n\r\nfunction uiReducer (state=uiInitialState, action) {\r\n  switch (action.type) {\r\n    case \"HEX_CLICKED\":\r\n      console.log(\"received HEX_CLICKED action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      return Object.assign({}, state, {\r\n        selectedHexKey: action.key.toString()\r\n        })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction hexReducer(state = hexesInitialState, action) {\r\n  const localstorageKey='globalMap';\r\n  switch (action.type) {\r\n    case \"ADD_HEX\":\r\n      console.log(\"received ADD_HEX action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      if (state.hexes.find(hex => hex.key === action.x + \" \" + action.y)) {\r\n        alert(\"this hex already exists\");\r\n        return state\r\n      } else {\r\n        return Object.assign({}, state, {\r\n          hexes: [\r\n            ...state.hexes,\r\n            {\r\n              \"key\": action.x + \" \" + action.y, \"x\": action.x, \"y\": action.y, \"terrain\": action.terrain\r\n            }\r\n          ]\r\n        })\r\n      }\r\n    case \"DELETE_HEX\":\r\n      console.log(\"received DELETE_HEX action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      //return { ...state, {\"key\": action.x + \" \" + action.y, \"x\": action.x, \"y\": action.y, \"terrain\": action.terrain  }}\r\n      if (!state.hexes.find(hex => hex.key === action.x + \" \" + action.y)) {\r\n        alert(\"no such hex found\");\r\n        return state\r\n      } else {\r\n        let delete_key = action.x + \" \" + action.y;\r\n        return {hexes: state.hexes.filter(({key}) => key !== delete_key)}\r\n      }\r\n    case \"SAVE_MAP\":\r\n      console.log(\"received SAVE_MAP action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      localStorage[localstorageKey] = JSON.stringify(state);\r\n      return state\r\n    case \"LOAD_MAP\":\r\n      console.log(\"received LOAD_MAP action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      if(localStorage[localstorageKey]) {\r\n        return {hexes: JSON.parse(localStorage[localstorageKey]).hexes}\r\n      } else {\r\n        console.log('no save found');\r\n        return state\r\n      }\r\n    case \"CLEAR_MAP\":\r\n      console.log(\"received CLEAR_MAP action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      return {hexes: []}\r\n    case \"CLEAR_SAVE\":\r\n      console.log(\"received CLEAR_SAVE action\");\r\n      console.log(\"action content: \" + JSON.stringify(action));\r\n      if(localStorage[localstorageKey]) {\r\n        localStorage.removeItem(localstorageKey);\r\n      } else {\r\n        console.log('no save found');\r\n      }\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  hexes: hexReducer,\r\n  form: formReducer,\r\n  ui: uiReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/plains.da552529.svg\";","module.exports = __webpack_public_path__ + \"static/media/forest.ae07cc8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/hills.f727d692.svg\";","module.exports = __webpack_public_path__ + \"static/media/mountain.41420ec4.svg\";","module.exports = __webpack_public_path__ + \"static/media/swamp.89151b3f.svg\";"],"sourceRoot":""}